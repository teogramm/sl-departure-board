diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..5335b4f
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,39 @@
+project(wiringPi LANGUAGES C VERSION ${WPI_VERSION})
+
+set(CMAKE_THREAD_LIBS_INIT "-lpthread")
+set(CMAKE_HAVE_THREADS_LIBRARY 1)
+set(CMAKE_USE_WIN32_THREADS_INIT 0)
+set(CMAKE_USE_PTHREADS_INIT 1)
+set(THREADS_PREFER_PTHREAD_FLAG ON)
+find_package(Threads REQUIRED)
+
+file(GLOB WPI_SRC_FILES ${wiringpi_SOURCE_DIR}/wiringPi/*.c)
+file(GLOB WPI_HEADERS ${wiringpi_SOURCE_DIR}/wiringPi/*.h)
+
+include(CMakePackageConfigHelpers)
+include(GNUInstallDirs)
+
+# https://blog.vito.nyc/posts/cmake-pkg/
+
+# Create our library target
+add_library(wiringPi)
+#
+target_sources(wiringPi PRIVATE ${WPI_SRC_FILES})
+target_sources(wiringPi PUBLIC
+        FILE_SET HEADERS
+        BASE_DIRS ${wiringpi_SOURCE_DIR}/wiringPi
+        FILES ${WPI_HEADERS}
+)
+set_target_properties(wiringPi
+        PROPERTIES
+        LINKER_LANGUAGE C
+)
+target_link_libraries(wiringPi ${CMAKE_THREAD_LIBS_INIT} m rt crypt)
+
+write_basic_package_version_file(
+        ${CMAKE_CURRENT_BINARY_DIR}/wiringpi-config-version.cmake
+        COMPATIBILITY AnyNewerVersion
+)
+
+install(TARGETS wiringPi EXPORT wiringPiTargets FILE_SET HEADERS)
+install(EXPORT wiringPiTargets NAMESPACE wiringPi DESTINATION ${CMAKE_INSTALL_DATADIR}/wiringpi)
diff --git a/wiringPi/wiringPi.c b/wiringPi/wiringPi.c
index bc00369..6db9761 100644
--- a/wiringPi/wiringPi.c
+++ b/wiringPi/wiringPi.c
@@ -2181,11 +2181,11 @@ int digitalRead (int pin)
         break;
     }
 
-    if (PI_MODEL_5 == RaspberryPiModel) {
-      switch(gpio[2*pin] & RP1_STATUS_LEVEL_MASK) {
-        default: // 11 or 00 not allowed, give LOW!
-        case RP1_STATUS_LEVEL_LOW:  return LOW ;
-        case RP1_STATUS_LEVEL_HIGH: return HIGH ;
+    if (ISRP1MODEL) {
+      if ((gpio[2*pin] & RP1_STATUS_LEVEL_MASK) == RP1_STATUS_LEVEL_HIGH) {
+        return HIGH;
+      } else { // 11 or 00 not allowed, give LOW!
+        return LOW;
       }
     } else {
       if ((*(gpio + gpioToGPLEV [pin]) & (1 << (pin & 31))) != 0)
